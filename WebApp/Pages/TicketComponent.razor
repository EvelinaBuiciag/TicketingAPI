@page "/tickets/{ticketId:int}"
@inject ITicketsScreenUseCases TicketsScreenUseCases

<h3>Ticket</h3>
<br />
@if (ticket != null)
{
<ul>
    <li>@ticket.Title</li>
    <li>@ticket.Description</li>
    <li>@ticket.Price</li>
</ul>
<EditForm Model="ticket" OnValidSubmit="Save">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="mb-3">
        <label for="title" class="form-label">Title</label>
        <InputText class="form-control" id="title" @bind-Value="ticket.Title"></InputText>
    </div>
    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <InputText class="form-control" id="description" @bind-Value="ticket.Description"></InputText>
    </div>
    <div class="mb-3">
        <label for="price" class="form-label">price</label>
        <InputNumber class="form-control" id="price" @bind-Value="ticket.Price"></InputNumber>
    </div>

    <NavLink href="@($"/tickets/{ticket.TicketId}")">
        <button class="btn btn-primary" type="submit">
            Save
        </button>
    </NavLink>
    <NavLink href="@($"/tickets")">
        <button class="btn btn-primary" type="submit">
            View All Tickets
        </button>
    </NavLink>

</EditForm>

}

@code {
    Ticket ticket;

    [Parameter]
    public int TicketId { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        ticket = await TicketsScreenUseCases.ViewTicketById(TicketId);
    }

    void Save()
    {
        bool bSuccess = true;

        if (bSuccess)
        {
            TicketsScreenUseCases.UpdateTicket(ticket);
        }


    }
}

